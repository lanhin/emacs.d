(1
 (a . [(20210929 1510) ((emacs (25))) "Associative data structure functions" tar])
 (add-node-modules-path . [(20230307 655) ((s (1 12 0))) "Add node_modules to your exec-path" tar])
 (aggressive-indent . [(20230112 1300) ((emacs (24 3))) "Minor mode to aggressively keep your code always indented" tar])
 (aio . [(20200610 1904) ((emacs (26 1))) "async/await for Emacs Lisp" tar])
 (alert . [(20221213 1619) ((gntp (0 1)) (log4e (0 3 0)) (cl-lib (0 5))) "Growl-style notification system for Emacs" tar])
 (anzu . [(20240202 447) ((emacs (25 1))) "Show number of matches in mode-line while searching" tar])
 (async . [(20240704 543) ((emacs (24 4))) "Asynchronous processing in Emacs" tar])
 (auto-compile . [(20240628 2027) ((emacs (26 1))) "Automatically compile Emacs Lisp libraries" tar])
 (avy . [(20230420 404) ((emacs (24 1)) (cl-lib (0 5))) "Jump to arbitrary positions in visible text and select text quickly." tar])
 (browse-kill-ring . [(20231104 1450) nil "interactively insert items from kill-ring" tar])
 (bug-reference-github . [(20200206 2158) nil "Set `bugformat' in Github repos" tar])
 (bundler . [(20200129 1338) ((inf-ruby (2 1)) (cl-lib (0 5))) "Interact with Bundler from Emacs" tar])
 (caml . [(20231011 328) ((emacs (24 4))) "Caml mode for GNU Emacs" tar])
 (cask-mode . [(20160410 1449) ((emacs (24 3))) "major mode for editing Cask files" tar])
 (cider . [(20240704 2332) ((emacs (26)) (clojure-mode (5 19)) (parseedn (1 2 1)) (queue (0 2)) (spinner (1 7)) (seq (2 22)) (sesman (0 3 2)) (transient (0 4 1))) "Clojure Interactive Development Environment that Rocks" tar])
 (cl-libify . [(20181130 230) ((emacs (25))) "Update elisp code to use cl-lib instead of cl" tar])
 (cljsbuild-mode . [(20160402 1700) nil "A minor mode for the ClojureScript 'lein cljsbuild' command" tar])
 (clojure-mode . [(20240526 1825) ((emacs (25 1))) "Major mode for Clojure code" tar])
 (clojure-ts-mode . [(20240618 301) ((emacs (29 1))) "Major mode for Clojure code" tar])
 (closql . [(20240701 2240) ((emacs (26 1)) (compat (29 1 4 5)) (emacsql (20240124))) "Store EIEIO objects using EmacSQL" tar])
 (color-theme-sanityinc-solarized . [(20220917 1350) ((emacs (24 1)) (cl-lib (0 6))) "A version of Ethan Schoonover's Solarized themes" tar])
 (color-theme-sanityinc-tomorrow . [(20240621 1005) ((emacs (24 1))) "A version of Chris Kempson's tomorrow themes" tar])
 (command-log-mode . [(20160413 447) nil "log keyboard commands to buffer" tar])
 (commenter . [(20160219 1627) ((emacs (24 4)) (let-alist (1 0 4))) "multiline-comment support package" tar])
 (compat . [(30 0 0 0) ((emacs (24 4)) (seq (2 23))) "Emacs Lisp Compatibility Library" tar])
 (concurrent . [(20170601 435) ((emacs (24 3)) (deferred (0 5 0))) "Concurrent utility functions for emacs lisp" tar])
 (consult . [(20240708 2159) ((emacs (27 1)) (compat (30))) "Consulting completing-read" tar])
 (consult-eglot . [(20240324 1137) ((emacs (27 1)) (eglot (1 7)) (consult (0 31)) (project (0 3 0))) "A consulting-read interface for eglot" tar])
 (corfu . [(20240709 1814) ((emacs (27 1)) (compat (30))) "COmpletion in Region FUnction" tar])
 (corfu-terminal . [(0 7) ((emacs (26 1)) (corfu (0 36)) (popon (0 13))) "Corfu popup on terminal" tar])
 (crontab-mode . [(20210715 133) ((emacs (24 3))) "Major mode for crontab(5)" tar])
 (css-eldoc . [(20220415 1629) nil "an eldoc-mode plugin for CSS source code" tar])
 (csv-mode . [(1 25) ((emacs (27 1)) (cl-lib (0 5))) "Major mode for editing comma/char separated values" tar])
 (ctable . [(20210128 629) ((emacs (24 3)) (cl-lib (0 5))) "Table component for Emacs Lisp" tar])
 (dash . [(20240510 1327) ((emacs (24))) "A modern list library for Emacs" tar])
 (default-text-scale . [(20191226 2234) ((emacs (24))) "Easily adjust the font size in all frames" tar])
 (deferred . [(20170901 1330) ((emacs (24 4))) "Simple asynchronous functions for emacs lisp" tar])
 (dhall-mode . [(20230228 1005) ((emacs (24 4)) (reformatter (0 3))) "Major mode for the dhall configuration language" tar])
 (diff-hl . [(20240702 2020) ((cl-lib (0 2)) (emacs (25 1))) "Highlight uncommitted changes using VC" tar])
 (diminish . [(20220909 847) ((emacs (24 3))) "Diminished modes are minor modes with no modeline display" tar])
 (dimmer . [(20220817 122) ((emacs (25 1))) "Visually highlight the selected buffer" tar])
 (diredfl . [(20230224 1302) ((emacs (24))) "Extra font lock rules for a more colourful dired" tar])
 (disable-mouse . [(20240604 900) ((emacs (24 1))) "Disable mouse commands globally" tar])
 (docker . [(20231110 1006) ((aio (1 0)) (dash (2 19 1)) (emacs (26 1)) (s (1 13 0)) (tablist (1 1)) (transient (0 4 3))) "Interface to Docker" tar])
 (docker-compose-mode . [(20200830 1336) ((emacs (24 3)) (dash (2 12 0)) (yaml-mode (0 0 12))) "Major mode for editing docker-compose files" tar])
 (dockerfile-mode . [(20240324 1010) ((emacs (24))) "Major mode for editing Docker's Dockerfiles" tar])
 (dotenv-mode . [(20191027 2129) ((emacs (24 3))) "Major mode for .env files" tar])
 (dune . [(20240427 1346) nil "Integration with the dune build system" tar])
 (dune-format . [(20210505 108) ((reformatter (0 6)) (emacs (24 1))) "Reformat OCaml's dune files automatically" tar])
 (eat . [(0 9 4) ((emacs (26 1)) (compat (29 1))) "Emulate A Terminal, in a region, in a buffer and in Eshell" tar])
 (elein . [(20120120 1116) nil "running leiningen commands from emacs" tar])
 (elisp-slime-nav . [(20210510 528) ((emacs (24 1)) (cl-lib (0 2))) "Make M, work in elisp like they do in slime" tar])
 (elm-mode . [(20230315 1122) ((f (0 17)) (s (1 7 0)) (emacs (25 1)) (seq (2 23)) (reformatter (0 3))) "Major mode for Elm" tar])
 (elm-test-runner . [(20230905 331) ((emacs (24 4))) "Enhanced support for running elm-test" tar])
 (emacsql . [(20240623 1340) ((emacs (25 1))) "Highend" tar])
 (embark . [(20240607 2213) ((emacs (27 1)) (compat (29 1 4 0))) "Conveniently act on minibuffer completions" tar])
 (embark-consult . [(20240419 452) ((emacs (27 1)) (compat (29 1 4 0)) (embark (1 0)) (consult (1 0))) "Consult integration for Embark" tar])
 (envrc . [(20240613 907) ((emacs (26 1)) (inheritenv (0 1))) "Support for `direnv' that operates buffer-locally" tar])
 (epc . [(20140610 534) ((concurrent (0 3 1)) (ctable (0 1 2))) "A RPC stack for the Emacs Lisp" tar])
 (erlang . [(20240517 1225) ((emacs (24 1))) "Erlang major mode" tar])
 (exec-path-from-shell . [(20240411 859) ((emacs (24 4))) "Get environment variables such as $PATH from the shell" tar])
 (f . [(20240308 906) ((emacs (24 1)) (s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" tar])
 (flycheck . [(20240703 1352) ((emacs (26 1))) "Onfly syntax checking" tar])
 (flycheck-clojure . [(20191215 2227) ((cider (0 22 0)) (flycheck (32 -4)) (let-alist (1 0 1)) (emacs (25))) "Flycheck: Clojure support" tar])
 (flycheck-ledger . [(20200304 2204) ((emacs (24 1)) (flycheck (0 15))) "Flycheck integration for ledger files" tar])
 (flycheck-nim . [(20190927 1514) ((dash (2 4 0)) (flycheck (0 20))) "Defines a flycheck syntax checker for nim" tar])
 (flycheck-nimsuggest . [(20171027 2208) ((flycheck (0 23)) (emacs (24 3))) "flycheck backend for Nim using nimsuggest" tar])
 (flycheck-relint . [(20200721 2217) ((emacs (26 1)) (flycheck (0 22)) (relint (1 15))) "A Flycheck checker for elisp regular expressions" tar])
 (flycheck-rust . [(20240205 1018) ((emacs (24 1)) (flycheck (28)) (dash (2 13 0)) (seq (2 3)) (let-alist (1 0 4))) "Flycheck: Rust additions and Cargo support" tar])
 (flymake-actionlint . [(20231104 239) ((emacs (24 1)) (flymake-easy (0 0 0))) "A Flymake handler for actionlint" tar])
 (flymake-easy . [(20240624 1702) nil "Helpers for easily building flymake checkers" tar])
 (flymake-flycheck . [(20230826 749) ((flycheck (31)) (emacs (26 1))) "Use flycheck checkers as flymake backends" tar])
 (flymake-ruff . [(20240709 1338) ((emacs (26 1)) (project (0 3 0))) "A flymake plugin for python files using ruff" tar])
 (forge . [(20240702 1601) ((emacs (27 1)) (compat (29 1 4 5)) (closql (20240701)) (dash (2 19 1)) (emacsql (20240124)) (ghub (20240507)) (let-alist (1 0 6)) (magit (20240701)) (markdown-mode (2 6)) (seq (2 24)) (transient (20240421)) (yaml (0 5 5))) "Access Git forges from Magit." tar])
 (gcmh . [(20201116 2251) ((emacs (24))) "the Garbage Collector Magic Hack" tar])
 (gh . [(20230825 1217) ((emacs (25 1)) (pcache (0 4 2)) (logito (0 1)) (marshal (0 9 0)) (cl-lib (0 3))) "A GitHub library for Emacs" tar])
 (ghub . [(20240618 1527) ((emacs (26 3)) (compat (29 1 4 5)) (let-alist (1 0 6)) (treepy (0 1 2))) "Client libraries for Git forge APIs." tar])
 (git-commit . [(20240623 1335) ((emacs (26 1)) (compat (29 1 4 5)) (transient (20240421)) (with-editor (20240415))) "Edit Git commit messages." tar])
 (git-link . [(20240630 626) ((emacs (24 3))) "Get the GitHub/Bitbucket/GitLab URL for a buffer location" tar])
 (git-modes . [(20240618 1609) ((emacs (25 1)) (compat (29 1 4 5))) "Major modes for editing Git configuration files" tar])
 (git-timemachine . [(20240427 924) ((emacs (24 3)) (transient (0 1 0))) "Walk through git revisions of a file" tar])
 (github-clone . [(20210108 1920) ((gh (1 0 1)) (magit (3 0 0)) (emacs (25 1))) "Fork and clone github repos" tar])
 (github-review . [(20211029 243) ((emacs (25 1)) (s (1 12 0)) (ghub (2 0)) (dash (2 11 0)) (deferred (0 5 1)) (a (0 1 1))) "GitHub based code review" tar])
 (gntp . [(20141025 250) nil "Growl Notification Protocol for Emacs" tar])
 (gnu-elpa-keyring-update . [(2022 12 1) nil "Update Emacs's GPG keyring for GNU ELPA" tar])
 (gnuplot . [(20230323 1400) ((emacs (25 1))) "Major-mode and interactive frontend for gnuplot" tar])
 (haml-mode . [(20230608 1833) ((emacs (24 1)) (cl-lib (0 5))) "Major mode for editing Haml files" tar])
 (haskell-mode . [(20240527 853) ((emacs (25 1))) "A Haskell editing mode" tar])
 (hcl-mode . [(20240220 1534) ((emacs (24 3))) "Major mode for Hashicorp" tar])
 (highlight-escape-sequences . [(20201214 1730) nil "Highlight escape sequences" tar])
 (highlight-quoted . [(20140916 1822) ((emacs (24))) "Highlight Lisp quotes and quoted symbols" tar])
 (hl-todo . [(20240707 1351) ((emacs (26 1)) (compat (29 1 4 5))) "Highlight TODO and similar keywords" tar])
 (ht . [(20230703 558) ((dash (2 12 0))) "The missing hash table library for Emacs" tar])
 (htmlize . [(20240527 1456) ((emacs (25 1))) "Convert buffer text and decorations to HTML." tar])
 (httprepl . [(20141101 1734) ((s (1 9 0)) (dash (2 5 0)) (emacs (24))) "An HTTP REPL" tar])
 (ibuffer-projectile . [(20230817 610) ((projectile (0 11 0)) (emacs (25 1)) (seq (2))) "Group ibuffer's list by projectile root" tar])
 (ibuffer-vc . [(20230817 606) ((emacs (25 1)) (seq (2))) "Group ibuffer's list by VC project, or show VC status" tar])
 (immortal-scratch . [(20160517 2118) nil "respawn the scratch buffer when it's killed" tar])
 (inf-ruby . [(20240627 2135) ((emacs (26 1))) "Run a Ruby process in a buffer" tar])
 (inflections . [(20210110 2237) ((cl-lib (0 5)) (emacs (24))) "convert english words between singular and plural" tar])
 (info-colors . [(20220927 1640) ((emacs (24)) (cl-lib (0 5))) "Extra colors for Info-mode" tar])
 (inheritenv . [(20230804 651) ((emacs (24 4))) "Make temp buffers inherit buffer-local environment variables" tar])
 (ipretty . [(20180606 522) nil "Interactive Emacs Lisp pretty-printing" tar])
 (j-mode . [(20240611 2211) nil "Major mode for editing J programs" tar])
 (js-comint . [(20231126 230) ((emacs (24 3))) "JavaScript interpreter in window." tar])
 (js2-mode . [(20240418 6) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar])
 (json-mode . [(20240427 1245) ((json-snatcher (1 0 0)) (emacs (24 4))) "Major mode for editing JSON files" tar])
 (json-snatcher . [(20200916 1717) ((emacs (24))) "Grabs the path to JSON values in a JSON file" tar])
 (just-mode . [(20240424 1809) ((emacs (26 1))) "Justfile editing mode" tar])
 (justl . [(20240701 1259) ((transient (0 1 0)) (emacs (27 1)) (s (1 2 0)) (f (0 20 0)) (inheritenv (0 2))) "Major mode for driving just files" tar])
 (ledger-mode . [(20240709 1803) ((emacs (25 1))) "Helper code for use with the ledger command-line tool" tar])
 (list-unicode-display . [(20230216 958) ((emacs (24 3))) "Search for and list unicode characters by name" tar])
 (log4e . [(20240123 1313) nil "provide logging framework for elisp" tar])
 (logito . [(20201226 534) ((emacs (25 1))) "logging library for Emacs" tar])
 (lsp-mode . [(20240711 212) ((emacs (27 1)) (dash (2 18 0)) (f (0 20 0)) (ht (2 3)) (spinner (1 7 3)) (markdown-mode (2 3)) (lv (0)) (eldoc (1 11))) "LSP mode" tar])
 (lua-mode . [(20231023 947) ((emacs (24 3))) "a major-mode for editing Lua scripts" tar])
 (lv . [(20200507 1518) nil "Other echo area" tar])
 (macrostep . [(20240513 2203) ((cl-lib (0 5)) (compat (29))) "Interactive macro expander" tar])
 (magit . [(20240704 2248) ((emacs (26 1)) (compat (29 1 4 5)) (dash (20240405)) (git-commit (20240429)) (magit-section (20240429)) (seq (2 24)) (transient (20240421)) (with-editor (20240415))) "A Git porcelain inside Emacs." tar])
 (magit-section . [(20240628 1638) ((emacs (26 1)) (compat (29 1 4 5)) (dash (20240405))) "Sections for read-only buffers." tar])
 (magit-todos . [(20240519 247) ((emacs (26 1)) (async (1 9 2)) (dash (2 13 0)) (f (0 17 2)) (hl-todo (1 9 0)) (magit (2 13 0)) (pcre2el (1 8)) (s (1 12 0)) (transient (0 2 0))) "Show source file TODOs in Magit" tar])
 (marginalia . [(20240708 2158) ((emacs (27 1)) (compat (30))) "Enrich existing commands with completion annotations" tar])
 (markdown-mode . [(20240626 826) ((emacs (27 1))) "Major mode for Markdown-formatted text" tar])
 (marshal . [(20201223 1853) ((emacs (25 1)) (ht (2 0))) "eieio extension for automatic (un)marshalling" tar])
 (mmm-mode . [(20240222 428) ((emacs (25 1)) (cl-lib (0 2))) "Allow Multiple Major Modes in a buffer" tar])
 (mode-line-bell . [(20181029 516) nil "Flash the mode line instead of ringing the bell" tar])
 (move-dup . [(20210127 1938) ((emacs (25 1))) "Eclipse-like moving and duplicating lines or rectangles" tar])
 (multiple-cursors . [(20240223 1134) ((cl-lib (0 5))) "Multiple cursors for Emacs." tar])
 (nginx-mode . [(20240412 402) nil "major mode for editing nginx config files" tar])
 (nim-mode . [(20240220 1033) ((emacs (24 4)) (epc (0 1 1)) (let-alist (1 0 1)) (commenter (0 5 1)) (flycheck-nimsuggest (0 8 1))) "A major mode for the Nim programming language" tar])
 (nix-ts-mode . [(20240514 1605) ((emacs (29 1))) "Major mode for Nix expressions, powered by tree-sitter" tar])
 (nixpkgs-fmt . [(20200327 2302) ((emacs (24)) (reformatter (0 3))) "Reformat Nix using nixpkgs-fmt" tar])
 (orderless . [(20240709 1344) ((emacs (27 1))) "Completion style for matching regexps in any order" tar])
 (org-cliplink . [(20201126 1020) ((emacs (24 4))) "insert org-mode links from the clipboard" tar])
 (org-pomodoro . [(20220318 1618) ((alert (0 5 10)) (cl-lib (0 5))) "Pomodoro implementation for org-mode." tar])
 (origami . [(20200331 1019) ((s (1 9 0)) (dash (2 5 0)) (emacs (24)) (cl-lib (0 5))) "Flexible text folding" tar])
 (package-lint . [(20240507 1722) ((emacs (24 4)) (let-alist (1 0 6))) "A linting library for elisp package authors" tar])
 (package-lint-flymake . [(20240330 1458) ((emacs (26 1)) (package-lint (0 5))) "A package-lint Flymake backend" tar])
 (page-break-lines . [(20240311 1026) ((emacs (25 1))) "Display ^L page breaks as tidy horizontal lines" tar])
 (paredit . [(20230718 2027) nil "minor mode for editing parentheses" tar])
 (parseclj . [(20231203 1905) ((emacs (25))) "Clojure/EDN parser" tar])
 (parseedn . [(20231203 1909) ((emacs (26)) (parseclj (1 1 1)) (map (2))) "Clojure/EDN parser" tar])
 (pcache . [(20220724 1841) ((emacs (25 1))) "persistent caching for Emacs." tar])
 (pcre2el . [(20240629 2322) ((emacs (25 1))) "regexp syntax converter" tar])
 (php-mode . [(20240621 742) ((emacs (26 1))) "Major mode for editing PHP code" tar])
 (pip-requirements . [(20240621 2151) ((dash (2 8 0))) "A major mode for editing pip requirements files." tar])
 (popon . [(0 13) ((emacs (25 1))) "Pop floating text on a window" tar])
 (popup . [(20240101 830) ((emacs (24 3))) "Visual Popup User Interface" tar])
 (prettier-js . [(20180109 726) nil "Minor mode to format JS code on file save" tar])
 (projectile . [(20240212 1100) ((emacs (25 1))) "Manage and navigate projects in Emacs easily" tar])
 (projectile-rails . [(20221231 1643) ((emacs (25 1)) (projectile (0 12 0)) (inflections (1 1)) (inf-ruby (2 2 6)) (f (0 13 0)) (rake (0 3 2)) (dash (2 18 1))) "Minor mode for Rails projects based on projectile-mode" tar])
 (psci . [(20231219 52) ((emacs (25 1)) (purescript-mode (13 10)) (dash (2 9 0)) (inheritenv (0 2))) "Major mode for purescript repl psci" tar])
 (puni . [(20231231 1415) ((emacs (26 1))) "Parentheses Universalistic" tar])
 (purescript-mode . [(20230309 1301) ((emacs (25 1))) "A PureScript editing mode" tar])
 (queue . [(0 2) nil "Queue data structure" tar])
 (rainbow-delimiters . [(20210515 1254) nil "Highlight brackets according to their depth" tar])
 (rainbow-mode . [(1 0 6) nil "Colorize color names in buffers" tar])
 (rake . [(20220211 827) ((f (0 13 0)) (dash (1 5 0)) (cl-lib (0 5))) "Run rake commands" tar])
 (reformatter . [(20231122 838) ((emacs (24 3))) "Define commands which run reformatters on the current buffer" tar])
 (regex-tool . [(20170104 1918) nil "A regular expression evaluation tool for programmers" tar])
 (relint . [(1 24) ((xr (1 25)) (emacs (26 1))) "Elisp regexp mistake finder" tar])
 (restclient . [(20231010 1327) nil "An interactive HTTP client for Emacs" tar])
 (robe . [(20240509 155) ((inf-ruby (2 5 1)) (emacs (25 1))) "Code navigation, documentation lookup and completion for Ruby" tar])
 (rspec-mode . [(20230819 154) ((ruby-mode (1 0)) (cl-lib (0 4))) "Enhance ruby-mode for RSpec" tar])
 (ruby-compilation . [(20150709 640) ((inf-ruby (2 2 1))) "run a ruby process in a compilation buffer" tar])
 (ruby-hash-syntax . [(20210106 224) ((emacs (24 1))) "Toggle ruby hash syntax between => and 1.9+ styles" tar])
 (ruff-format . [(20231117 2220) ((emacs (24)) (reformatter (0 3))) "Ruff format Python source" tar])
 (rust-mode . [(20240520 749) ((emacs (25 1))) "A major-mode for editing Rust source code" tar])
 (s . [(20220902 1511) nil "The long lost Emacs string manipulation library." tar])
 (sass-mode . [(20190502 53) ((haml-mode (3 0 15)) (cl-lib (0 5))) "Major mode for editing Sass files" tar])
 (scratch . [(20220319 1705) ((emacs (25 1))) "Mode-specific scratch buffers" tar])
 (seq . [(2 24) nil "Sequence manipulation functions" tar])
 (sesman . [(20240417 1723) ((emacs (25))) "Generic Session Manager" tar])
 (session . [(20210422 53) nil "use variables, registers and buffer places across sessions" tar])
 (shfmt . [(20240104 1218) ((emacs (24)) (reformatter (0 3))) "Reformat shell scripts using shfmt" tar])
 (sly . [(20240501 1118) ((emacs (24 3))) "Sylvester the Cat's Common Lisp IDE" tar])
 (sly-asdf . [(20221119 2235) ((emacs (24 3)) (sly (1 0 0 -2 2)) (popup (0 5 3))) "ASDF system support for SLY" tar])
 (sly-macrostep . [(20191211 1630) ((sly (1 0 0 -2 2)) (macrostep (0 9))) "fancy macro-expansion via macrostep.el" tar])
 (sly-repl-ansi-color . [(20171020 1516) ((sly (0)) (cl-lib (0 5))) "Add ANSI colors support to the sly mrepl." tar])
 (smarty-mode . [(20100703 1158) nil "major mode for editing smarty templates" tar])
 (spinner . [(1 7 4) ((emacs (24 3))) "Add spinners and progressline for ongoing operations" tar])
 (sqlformat . [(20240325 1006) ((emacs (24 3)) (reformatter (0 3))) "Reformat SQL using sqlformat or pgformatter" tar])
 (sudo-edit . [(20220801 1317) ((emacs (24)) (cl-lib (0 5))) "Open files as another user" tar])
 (switch-window . [(20220812 2137) ((emacs (24))) "A *visual* way to switch window" tar])
 (symbol-overlay . [(20240311 1207) ((emacs (24 3)) (seq (2 2))) "Highlight symbols with keymap-enabled overlays" tar])
 (tablist . [(20231019 1126) ((emacs (24 3))) "Extended tabulatedmode" tar])
 (tagedit . [(20161121 855) ((s (1 3 1)) (dash (1 0 3))) "Some pareditmode" tar])
 (terraform-mode . [(20240321 2136) ((emacs (24 3)) (hcl-mode (0 3)) (dash (2 17 0))) "Major mode for terraform configuration file" tar])
 (textile-mode . [(20240212 1755) nil "Textile markup editing major mode" tar])
 (toml-mode . [(20161107 1800) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing TOML files" tar])
 (transient . [(20240629 1508) ((emacs (26 1)) (compat (29 1 4 5)) (seq (2 24))) "Transient commands" tar])
 (treepy . [(20230715 2154) ((emacs (25 1))) "Generic tree traversal tools" tar])
 (tuareg . [(20231009 2143) ((emacs (26 3)) (caml (4 8))) "OCaml mode" tar])
 (typescript-mode . [(20240603 630) ((emacs (24 3))) "Major mode for editing typescript" tar])
 (uiua-mode . [(20231219 1706) ((emacs (27 1)) (reformatter (0 8))) "Uiua integration" tar])
 (uiua-ts-mode . [(20231215 2007) ((emacs (29 1)) (uiua-mode (0 0 5))) "Uiua treesiter mode" tar])
 (unfill . [(20230227 1349) ((emacs (24 1))) "Do the opposite of fillregion" tar])
 (uptimes . [(20231015 1458) ((cl-lib (0 5)) (emacs (24))) "Track and display session uptimes" tar])
 (vc-darcs . [(20230319 1149) ((emacs (24))) "a VC backend for darcs" tar])
 (vertico . [(20240708 2157) ((emacs (27 1)) (compat (30))) "VERTical Interactive COmpletion" tar])
 (visual-fill-column . [(20240411 656) ((emacs (25 1))) "fillmode" tar])
 (vlf . [(20191126 2250) nil "View Large Files" tar])
 (wgrep . [(20230203 1214) ((emacs (25 1))) "Writable grep buffer" tar])
 (which-key . [(20240620 2145) ((emacs (25 1))) "Display available keybindings in popup" tar])
 (whitespace-cleanup-mode . [(20210510 533) ((emacs (24 1))) "Intelligently call whitespace-cleanup on save" tar])
 (whole-line-or-region . [(20240630 804) ((emacs (24 4))) "Operate on current line if region undefined" tar])
 (windswap . [(20200722 411) ((emacs (24 3))) "Like windmove, but swaps buffers while moving point" tar])
 (with-editor . [(20240702 1952) ((emacs (25 1)) (compat (29 1 4 5))) "Use the Emacsclient as $EDITOR" tar])
 (writeroom-mode . [(20231103 931) ((emacs (25 1)) (visual-fill-column (2 2))) "Minor mode for distraction-free writing" tar])
 (xr . [(1 25) ((emacs (26 1))) "Convert string regexp to rx notation" tar])
 (yagist . [(20160418 508) ((cl-lib (0 3))) "Yet Another Emacs integration for gist.github.com" tar])
 (yaml . [(20231211 1501) ((emacs (25 1))) "YAML parser for Elisp" tar])
 (yaml-mode . [(20240317 1602) ((emacs (24 1))) "Major mode for editing YAML files" tar])
 (yard-mode . [(20230505 1950) nil "Minor mode for Ruby YARD comments" tar])
 (yari . [(20151128 739) nil "Yet Another RI interface for Emacs" tar])
 )
